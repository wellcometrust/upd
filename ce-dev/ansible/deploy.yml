---
# Template playbook for a local Drupal8 codebase.
- hosts: upd-web
  vars:
    - project_name: upd
    - project_type: drupal8
    - webroot: www
    - build_type: local
    - _env_type: dev

    - _domain_name: www.{{ project_name }}.local
    # Path to your project root. This must match the "volume" set in the docker-compose template.
    - deploy_path: /home/ce-dev/deploy/live.local
    # This actually does not take any backup, but is needed to populate settings.php.
    - mysql_backup:
        handling: none
        credentials_handling: manual
    # A list of Drupal sites (for multisites).
    - drupal:
        sites:
          - folder: "default"
            public_files: "sites/default/files"
            install_command: "-y si"
            # Toggle config import on/off. Disabled for initial passes.
            config_import_command: ""
            # config_import_command: "cim"
            config_sync_directory: "config/sync"
            sanitize_command: "sql-sanitize"
            base_url: "https://{{ _domain_name }}"
    # Skip drush installer and use the one in project's vendor folder.
    - drush:
        use_vendor: true
    # Composer command to run.
    - composer:
        command: install
        no_dev: no
        working_dir: "{{ deploy_path }}"
        apcu_autoloader: no
    - mysql_sync:
        databases:
          - source:
              database: "{{ project_name }}.sql.bz2"
              type: dump
              host: "{{ project_name }}-web"
              fresh_db: false
              credentials_file: "/home/{{ deploy_user }}/.mysql.creds"
              dumps_directory: "{{ deploy_path }}/ce-dev"
            target:
              database: "{{ project_name }}_local"
              host: "{{ project_name }}-db"
              credentials_file: "/home/{{ deploy_user }}/.mysql.creds"
              type: fixed
  pre_tasks:
  post_tasks:
    # You can use the composer installed drush by calling the phar version, eg 'drush.phar st'
    # This just makes it usable without appending the .phar, eg `drush st`
    - name: Get our composer installed packages in the bash $PATH
      ansible.builtin.lineinfile:
        path: "/home/{{ deploy_user }}/.bashrc"
        line: "export PATH=\"{{ deploy_path }}/vendor/bin:$PATH\""
        state: present
  roles:
    - _init # Sets some variables the deploy scripts rely on.
    - composer # Composer install step.
    - database_backup # This is still needed to generate credentials.
    - config_generate # Generates settings.php
    - sync/database_sync # Grab database from a remote server.
    - database_apply # Run drush updb and config import.
    - _exit # Some common housekeeping.
