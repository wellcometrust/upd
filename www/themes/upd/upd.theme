<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function upd_theme($existing, $type, $theme, $path) {
  return [
    'upd_grid_list' => [
      'variables' => ['items' => [], 'grid' => 3],
      'template' => 'custom/upd-grid-list',
    ],
    'upd_previous_next' => [
      'variables' => [
        'previous_url' => '',
        'previous_display_text' => '',
        'previous_title' => '',
        'next_url' => '',
        'next_display_text' => '',
        'next_title' => '',
      ],
      'template' => 'custom/upd-previous-next',
    ],
    'contact_message_contact_us_form' => [
      'render element' => 'form',
      'template' => 'form/contact-message-contact-form',
    ],
    'upd_search_form' => [
      'variables' => [
        'search_terms' => '',
        'action' => '',
        'label' => '',
      ],
      'template' => 'custom/upd-search-form',
    ],
  ];
}

/**
 * Implements hook_preprocess_html().
 *
 * @param $variables
 */
function upd_preprocess_html(&$variables) {
  _override_page_title($variables);

  $image_path = drupal_get_path('theme', 'upd') . '/assets/images';
  $basic_favicons = [
    'shortcut-favicon' => [
      'rel' => 'shortcut icon',
      'file_name' => 'favicon.ico',
    ],
    'favicon' => [
      'rel' => 'icon',
      'file_name' => 'favicon.ico',
    ],
  ];
  foreach ($basic_favicons as $name => $config) {
    $variables['touch_icons'][$name] = [
      '#type' => 'inline_template',
      '#template' => '<link href="{{ href }}" rel="{{ rel }}" type="image/x-icon" />',
      '#context' => [
        'href' => "$image_path/{$config['file_name']}",
        'rel' => $config['rel'],
      ],
    ];
  }
  $icons = [
    '57',
    '60',
    '72',
    '76',
    '114',
    '120',
    '144',
    '152',
    '180',
  ];
  foreach ($icons as $size) {
    $sizes = $size . 'x' . $size;
    $variables['touch_icons']["apple-$size"] = [
      '#type' => 'inline_template',
      '#template' => '<link href="{{ href }}" rel="{{ rel }}" sizes="{{ size }}" />',
      '#context' => [
        'href' => "$image_path/apple-icon-$sizes",
        'rel' => 'apple-touch-icon',
        'size' => $sizes,
      ],
    ];
  }
  $more_favicons = [
    '16',
    '32',
    '96',
    '192',
  ];
  foreach ($more_favicons as $size) {
    $sizes = $size . 'x' . $size;
    $variables['touch_icons']["favicon-$size"] = [
      '#type' => 'inline_template',
      '#template' => '<link href="{{ href }}" type="image/png" rel="icon" sizes="{{ size }}" />',
      '#context' => [
        'href' => "$image_path/favicon-$sizes",
        'size' => $sizes,
      ],
    ];
  }
  $meta = [
    'apple-mobile-web-app-title' => 'Understanding Patient Data',
    'application-name' => 'Understanding Patient Data',
    'msapplication-square70x70logo' => "$image_path/ms-icon-70x70.png",
    'msapplication-square150x150logo' => "$image_path/ms-icon-150x150.png",
    'msapplication-square310x310logo' => "$image_path/ms-icon-310x310.png",
    'msapplication-TileColor' => '#014061',
    'msapplication-TileImage' => "$image_path/ms-icon-144x144.png",
    'theme-color' => '#014061',
  ];
  foreach ($meta as $name => $content) {
    $variables['touch_icons'][$name] = [
      '#type' => 'inline_template',
      '#template' => '<meta name="{{ name }}" content="{{ content }}" />',
      '#context' => [
        'name' => $name,
        'content' => $content,
      ],
    ];
  }
}

/**
 * Implements hook_theme_suggestions_user_alter().
 */
function upd_theme_suggestions_user_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'user__' . $variables['elements']['#view_mode'];
}

/**
 * Implements hook_preprocess_image()
 */
function upd_preprocess_image(&$variables) {
  // Remove width/height, this should be CSS driven.
  if (isset($variables['attributes']['width'])) {
    unset($variables['attributes']['width']);
  }
  if (isset($variables['attributes']['height'])) {
    unset($variables['attributes']['height']);
  }
}

/**
 * Implements hook_preprocess_node()
 */
function upd_preprocess_node(&$variables) {
  _generate_related_news_block($variables);
}

/**
 * Helper function to generate block of related content for news.
 *
 * @param $variables
 *
 * @see hook_preprocess_node()
 */
function _generate_related_news_block(&$variables) {
  $node = $variables['node'];
  // If we are looking at the full view of a news article node.
  if ($node->getType() == 'art' && $variables['view_mode'] == 'full') {
    // If the related news article taxonomy term is populated.
    if (isset($node->field_news_category) && !empty($node->field_news_category->getValue())) {
      // Then build and render the related_news_articles views block.
      $term = $node->field_news_category->getValue();
      // Supply taxonomy term to search for and NID of current node to exclude.
      $args = [$term[0]['target_id'], $node->id()];
      $view = \Drupal\views\Views::getView('related_news_articles');
      if (is_object($view)) {
        $view->setArguments($args);
        $view->setDisplay('Block');
        $variables['related_news_articles'] = $view->buildRenderable();
      }
    }
  }
}

/**
 * For some reason panel pages page titles do not take the configured value.
 * We override them here.
 *
 * @param $variables
 *
 * @see upd_preprocess_html()
 */
function _override_page_title(&$variables) {
  switch ($variables['root_path']) {
    case 'case-studies':
      $variables['head_title']['title'] = 'Case studies | Understand Patient Data';
      break;
    case 'search':
      $variables['head_title']['title'] = 'Search | Understand Patient Data';
      break;
  }
}

/**
 * Implements hook_form_alter.
 */
function upd_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  upd_news_dropdown_to_links($form, $form_state, $form_id);
  upd_mailchimp_form_theming($form, $form_state, $form_id);
}

/**
 * Convert a dropdown to clickable links.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function upd_news_dropdown_to_links(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-news-news') {
    $html = '<div class="wrapper  wrapper--gutter news-filter-container"><h4>Filter by</h4>';
    // Only get options which are taxonomy terms, e.g. not "all".
    foreach ($form['field_news_category_target_id']['#options'] as $k => $option) {
      $article_count = is_numeric($k) ? _upd_get_article_count($k) : NULL;
      if ($k == "All") {
        $html .= '<a href="#" class="news-cat-changer active" data-term-id="' . $k . '">All</a>';
      }
      elseif ($article_count > 0) {
        $html .= '<a href="#" class="news-cat-changer" data-term-id="' . $k . '">' . $option . ' (' . $article_count . ')</a>';
      }
    }
    $form['options'] = [
      '#markup' => $html . '</div>',
    ];
    $form['#attached']['library'][] = 'upd/news-cat';
  }
}

/**
 * Implements hook_theme_suggestions_form_element_alter().
 */
function upd_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (substr_compare($variables['element']['#name'], 'mergevars', 0, 9) == 0) {
    $suggestions[] = 'form_element__mailchimp';
  }
  if (stristr($variables['element']['#name'], 'mergevars[grouped][EMAIL]')) {
    $suggestions[] = 'form_element__mailchimp_nowrapper';
  }
}

/**
 * Implements hook_preprocess_form_element__CUSTOM().
 */
function upd_preprocess_form_element__mailchimp(&$variables) {
  $element_name = $variables['element']['#name'];

  switch (TRUE) {
    case stristr($element_name, 'mergevars[EMAIL]'):
      break;
    case stristr($element_name, 'mergevars[FNAME]'):
      $variables['attributes']['class'][] = "half-left";
      break;
    case stristr($element_name, 'mergevars[LNAME]'):
      $variables['attributes']['class'][] = "half-right";
      break;
    case stristr($element_name, 'mergevars[MMERGE3]'):
      $variables['attributes']['class'][] = "half-left";
      break;
    case stristr($element_name, 'mergevars[MMERGE4]'):
      $variables['attributes']['class'][] = "half-right";
      break;
  }
}

/**
 * Theme mailchimp signup form.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function upd_mailchimp_form_theming(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'mailchimp-signup-subscribe-block-subscribe-to-the-newsletter-form') {

    // Add placeholders, hide titles and add specific classes to form items.

    $form['actions']['submit']['#attributes']['class'][] = 'site-footer__submit';

    $form['mergevars']['EMAIL']['#attributes']['placeholder'] = $form['mergevars']['EMAIL']['#title'];
    $form['mergevars']['EMAIL']['#attributes']['id'] = 'mce-EMAIL';
    $form['mergevars']['EMAIL']['#attributes']['class'][] = 'site-footer__input';
    $form['mergevars']['EMAIL']['#attributes']['class'][] = 'email';
    $form['mergevars']['EMAIL']['#title_display'] = 'invisible';

    $form['mergevars']['FNAME']['#attributes']['placeholder'] = $form['mergevars']['FNAME']['#title'];
    $form['mergevars']['FNAME']['#attributes']['id'] = 'mce-FNAME';
    $form['mergevars']['FNAME']['#attributes']['class'][] = 'site-footer__input';
    $form['mergevars']['FNAME']['#attributes']['class'][] = 'visually-hidden';
    $form['mergevars']['FNAME']['#title_display'] = 'invisible';

    $form['mergevars']['LNAME']['#attributes']['placeholder'] = $form['mergevars']['LNAME']['#title'];
    $form['mergevars']['LNAME']['#attributes']['id'] = 'mce-LNAME';
    $form['mergevars']['LNAME']['#attributes']['class'][] = 'site-footer__input';
    $form['mergevars']['LNAME']['#attributes']['class'][] = 'visually-hidden';
    $form['mergevars']['LNAME']['#title_display'] = 'invisible';

    $form['mergevars']['MMERGE3']['#attributes']['placeholder'] = $form['mergevars']['MMERGE3']['#title'];
    $form['mergevars']['MMERGE3']['#attributes']['id'] = 'mce-MMERGE3';
    $form['mergevars']['MMERGE3']['#attributes']['class'][] = 'site-footer__input';
    $form['mergevars']['MMERGE3']['#attributes']['class'][] = 'visually-hidden';
    $form['mergevars']['MMERGE3']['#title_display'] = 'invisible';

    $form['mergevars']['MMERGE4']['#attributes']['placeholder'] = $form['mergevars']['MMERGE4']['#title'];
    $form['mergevars']['MMERGE4']['#attributes']['id'] = 'mce-MMERGE4';
    $form['mergevars']['MMERGE4']['#attributes']['class'][] = 'site-footer__input';
    $form['mergevars']['MMERGE4']['#attributes']['class'][] = 'visually-hidden';
    $form['mergevars']['MMERGE4']['#title_display'] = 'invisible';

    // Only radio buttons are allowed by mailchimp form builder, so changing field type here.

    $form['mergevars']['MMERGE5']['#title_display'] = 'invisible';
    $form['mergevars']['MMERGE5']['#type'] = 'checkboxes';

    // Group email and submit to match current form styling.

    $form['mergevars']['grouped'] = [
      '#type' => 'container',
      '#attributes' => [
        'class' => ['clear'],
      ],
      '#weight' => 10,
    ];

    $form['mergevars']['grouped']['submit'] = $form['actions']['submit'];
    $form['mergevars']['grouped']['EMAIL'] = $form['mergevars']['EMAIL'];

    unset($form['actions']);
    unset($form['mergevars']['EMAIL']);
  }
}

/**
 * Returns count of nodes tagged with term. Only news articles are tagged with
 * "news category" tag so we don't need to join.
 *
 * @param $tid
 *
 * @return int
 */
function _upd_get_article_count($tid) {
  $query = \Drupal::database()->select('taxonomy_index', 'ti');
  $query->fields('ti', ['nid']);
  $query->condition('ti.tid', $tid);
  $nodes = $query->execute()->fetchAll();
  return count($nodes);
}