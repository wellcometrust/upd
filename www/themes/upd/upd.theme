<?php

/**
 * Implements hook_theme().
 */
function upd_theme($existing, $type, $theme, $path) {
  return [
    'upd_grid_list' => [
      'variables' => ['items' => [], 'grid' => 3],
      'template' => 'custom/upd-grid-list',
    ],
    'upd_previous_next' => [
      'variables' => [
        'previous_url' => '',
        'previous_display_text' => '',
        'previous_title' => '',
        'next_url' => '',
        'next_display_text' => '',
        'next_title' => '',
      ],
      'template' => 'custom/upd-previous-next',
    ],
    'contact_message_contact_us_form' => [
      'render element' => 'form',
      'template' => 'form/contact-message-contact-form',
    ],
    'upd_search_form' => [
      'variables' => [
        'search_terms' => '',
        'action' => '',
        'label' => '',
      ],
      'template' => 'custom/upd-search-form',
    ],
  ];
}

/**
 * Implements hook_preprocess_html().
 * @param $variables
 */
function upd_preprocess_html(&$variables) {
  $image_path = drupal_get_path('theme', 'upd') . '/assets/images';
  $basic_favicons = [
    'shortcut-favicon' => [
      'rel' => 'shortcut icon',
      'file_name' => 'favicon.ico',
    ],
    'favicon' => [
      'rel' => 'icon',
      'file_name' => 'favicon.ico',
    ],
  ];
  foreach ($basic_favicons as $name => $config) {
    $variables['touch_icons'][$name] = [
      '#type' => 'inline_template',
      '#template' => '<link href="{{ href }}" rel="{{ rel }}" type="image/x-icon" />',
      '#context' => [
        'href' => "$image_path/{$config['file_name']}",
        'rel' => $config['rel'],
      ],
    ];
  }
  $icons = [
    '57',
    '60',
    '72',
    '76',
    '114',
    '120',
    '144',
    '152',
    '180',
  ];
  foreach ($icons as $size) {
    $sizes = $size . 'x' . $size;
    $variables['touch_icons']["apple-$size"] = [
      '#type' => 'inline_template',
      '#template' => '<link href="{{ href }}" rel="{{ rel }}" sizes="{{ size }}" />',
      '#context' => [
        'href' => "$image_path/apple-icon-$sizes",
        'rel' => 'apple-touch-icon',
        'size' => $sizes,
      ],
    ];
  }
  $more_favicons = [
    '16',
    '32',
    '96',
    '192',
  ];
  foreach ($more_favicons as $size) {
    $sizes = $size . 'x' . $size;
    $variables['touch_icons']["favicon-$size"] = [
      '#type' => 'inline_template',
      '#template' => '<link href="{{ href }}" type="image/png" rel="icon" sizes="{{ size }}" />',
      '#context' => [
        'href' => "$image_path/favicon-$sizes",
        'size' => $sizes,
      ],
    ];
  }
  $meta = [
    'apple-mobile-web-app-title' => 'Understanding Patient Data',
    'application-name' => 'Understanding Patient Data',
    'msapplication-square70x70logo' => "$image_path/ms-icon-70x70.png",
    'msapplication-square150x150logo' => "$image_path/ms-icon-150x150.png",
    'msapplication-square310x310logo' => "$image_path/ms-icon-310x310.png",
    'msapplication-TileColor' => '#014061',
    'msapplication-TileImage' => "$image_path/ms-icon-144x144.png",
    'theme-color' => '#014061',
  ];
  foreach ($meta as $name => $content) {
    $variables['touch_icons'][$name] = [
      '#type' => 'inline_template',
      '#template' => '<meta name="{{ name }}" content="{{ content }}" />',
      '#context' => [
        'name' => $name,
        'content' => $content,
      ],
    ];
  }
}

/**
 * Implements hook_theme_suggestions_user_alter().
 */
function upd_theme_suggestions_user_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'user__' . $variables['elements']['#view_mode'];
}

/**
 * Implements hook_preprocess_image()
 */
function upd_preprocess_image(&$variables) {
  // Remove width/height, this should be CSS driven.
  if (isset($variables['attributes']['width'])) {
    unset($variables['attributes']['width']);
  }
  if(isset($variables['attributes']['height'])){
    unset($variables['attributes']['height']);
  }
}

/**
 * Implements hook_preprocess_node()
 */
function upd_preprocess_node(&$variables) {
  _generate_related_news_block($variables);
}

/**
 * Helper function to generate block of related content for news.
 *
 * @param $variables
 * @see hook_preprocess_node()
 */
function _generate_related_news_block(&$variables) {
  $node = $variables['node'];
  // If we are looking at the full view of a news article node.
  if ($node->getType() == 'art' && $variables['view_mode'] == 'full') {
    // If the related news article taxonomy term is populated.
    if (isset($node->field_news_category) && !empty($node->field_news_category->getValue())) {
      // Then build and render the related_news_articles views block.
      $term = $node->field_news_category->getValue();
      // Supply taxonomy term to search for and NID of current node to exclude.
      $args = [$term[0]['target_id'], $node->id()];
      $view = \Drupal\views\Views::getView('related_news_articles');
      if (is_object($view)) {
        $view->setArguments($args);
        $view->setDisplay('Block');
        $variables['related_news_articles'] = $view->buildRenderable();
      }
    }
  }
}
